{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/**\n * Converts an integer as a number or bigint to a number, throwing an error if the input cannot safely be represented as a number.\n */\nexport function bigIntToNumber(number) {\n  if (typeof number === 'bigint' && (number < Number.MIN_SAFE_INTEGER || number > Number.MAX_SAFE_INTEGER)) {\n    throw new TypeError(\"\".concat(number, \" is not safe to convert to a number.\"));\n  }\n  return Number(number);\n}","map":{"version":3,"names":["bigIntToNumber","number","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","TypeError","concat"],"sources":["/home/helektrika/Documents/dummy-component/component/frontend/node_modules/apache-arrow/src/util/bigint.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * Converts an integer as a number or bigint to a number, throwing an error if the input cannot safely be represented as a number.\n */\nexport function bigIntToNumber(number: bigint | number): number {\n    if (typeof number === 'bigint' && (number < Number.MIN_SAFE_INTEGER || number > Number.MAX_SAFE_INTEGER)) {\n        throw new TypeError(`${number} is not safe to convert to a number.`);\n    }\n    return Number(number);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA,OAAM,SAAUA,cAAcA,CAACC,MAAuB;EAClD,IAAI,OAAOA,MAAM,KAAK,QAAQ,KAAKA,MAAM,GAAGC,MAAM,CAACC,gBAAgB,IAAIF,MAAM,GAAGC,MAAM,CAACE,gBAAgB,CAAC,EAAE;IACtG,MAAM,IAAIC,SAAS,IAAAC,MAAA,CAAIL,MAAM,yCAAsC,CAAC;;EAExE,OAAOC,MAAM,CAACD,MAAM,CAAC;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}