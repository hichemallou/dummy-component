{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/* eslint-disable @typescript-eslint/naming-convention */\nimport { Block as _Block } from '../../fb/block.mjs';\nimport { Footer as _Footer } from '../../fb/footer.mjs';\nimport * as flatbuffers from 'flatbuffers';\nvar Builder = flatbuffers.Builder;\nvar ByteBuffer = flatbuffers.ByteBuffer;\nimport { Schema } from '../../schema.mjs';\nimport { MetadataVersion } from '../../enum.mjs';\nimport { toUint8Array } from '../../util/buffer.mjs';\nimport { bigIntToNumber } from '../../util/bigint.mjs';\n/** @ignore */\nclass Footer_ {\n  /** @nocollapse */\n  static decode(buf) {\n    buf = new ByteBuffer(toUint8Array(buf));\n    const footer = _Footer.getRootAsFooter(buf);\n    const schema = Schema.decode(footer.schema());\n    return new OffHeapFooter(schema, footer);\n  }\n  /** @nocollapse */\n  static encode(footer) {\n    const b = new Builder();\n    const schemaOffset = Schema.encode(b, footer.schema);\n    _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n    for (const rb of [...footer.recordBatches()].slice().reverse()) {\n      FileBlock.encode(b, rb);\n    }\n    const recordBatchesOffset = b.endVector();\n    _Footer.startDictionariesVector(b, footer.numDictionaries);\n    for (const db of [...footer.dictionaryBatches()].slice().reverse()) {\n      FileBlock.encode(b, db);\n    }\n    const dictionaryBatchesOffset = b.endVector();\n    _Footer.startFooter(b);\n    _Footer.addSchema(b, schemaOffset);\n    _Footer.addVersion(b, MetadataVersion.V4);\n    _Footer.addRecordBatches(b, recordBatchesOffset);\n    _Footer.addDictionaries(b, dictionaryBatchesOffset);\n    _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n    return b.asUint8Array();\n  }\n  get numRecordBatches() {\n    return this._recordBatches.length;\n  }\n  get numDictionaries() {\n    return this._dictionaryBatches.length;\n  }\n  constructor(schema) {\n    let version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : MetadataVersion.V4;\n    let recordBatches = arguments.length > 2 ? arguments[2] : undefined;\n    let dictionaryBatches = arguments.length > 3 ? arguments[3] : undefined;\n    this.schema = schema;\n    this.version = version;\n    recordBatches && (this._recordBatches = recordBatches);\n    dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n  }\n  *recordBatches() {\n    for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n      if (block = this.getRecordBatch(i)) {\n        yield block;\n      }\n    }\n  }\n  *dictionaryBatches() {\n    for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n      if (block = this.getDictionaryBatch(i)) {\n        yield block;\n      }\n    }\n  }\n  getRecordBatch(index) {\n    return index >= 0 && index < this.numRecordBatches && this._recordBatches[index] || null;\n  }\n  getDictionaryBatch(index) {\n    return index >= 0 && index < this.numDictionaries && this._dictionaryBatches[index] || null;\n  }\n}\nexport { Footer_ as Footer };\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n  get numRecordBatches() {\n    return this._footer.recordBatchesLength();\n  }\n  get numDictionaries() {\n    return this._footer.dictionariesLength();\n  }\n  constructor(schema, _footer) {\n    super(schema, _footer.version());\n    this._footer = _footer;\n  }\n  getRecordBatch(index) {\n    if (index >= 0 && index < this.numRecordBatches) {\n      const fileBlock = this._footer.recordBatches(index);\n      if (fileBlock) {\n        return FileBlock.decode(fileBlock);\n      }\n    }\n    return null;\n  }\n  getDictionaryBatch(index) {\n    if (index >= 0 && index < this.numDictionaries) {\n      const fileBlock = this._footer.dictionaries(index);\n      if (fileBlock) {\n        return FileBlock.decode(fileBlock);\n      }\n    }\n    return null;\n  }\n}\n/** @ignore */\nexport class FileBlock {\n  /** @nocollapse */\n  static decode(block) {\n    return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n  }\n  /** @nocollapse */\n  static encode(b, fileBlock) {\n    const {\n      metaDataLength\n    } = fileBlock;\n    const offset = BigInt(fileBlock.offset);\n    const bodyLength = BigInt(fileBlock.bodyLength);\n    return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n  }\n  constructor(metaDataLength, bodyLength, offset) {\n    this.metaDataLength = metaDataLength;\n    this.offset = bigIntToNumber(offset);\n    this.bodyLength = bigIntToNumber(bodyLength);\n  }\n}","map":{"version":3,"names":["Block","_Block","Footer","_Footer","flatbuffers","Builder","ByteBuffer","Schema","MetadataVersion","toUint8Array","bigIntToNumber","Footer_","decode","buf","footer","getRootAsFooter","schema","OffHeapFooter","encode","b","schemaOffset","startRecordBatchesVector","numRecordBatches","rb","recordBatches","slice","reverse","FileBlock","recordBatchesOffset","endVector","startDictionariesVector","numDictionaries","db","dictionaryBatches","dictionaryBatchesOffset","startFooter","addSchema","addVersion","V4","addRecordBatches","addDictionaries","finishFooterBuffer","endFooter","asUint8Array","_recordBatches","length","_dictionaryBatches","constructor","version","arguments","undefined","block","i","n","getRecordBatch","getDictionaryBatch","index","_footer","recordBatchesLength","dictionariesLength","fileBlock","dictionaries","metaDataLength","bodyLength","offset","BigInt","createBlock"],"sources":["/home/helektrika/Documents/dummy-component/component/frontend/node_modules/apache-arrow/src/ipc/metadata/file.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\nimport { Block as _Block } from '../../fb/block.js';\nimport { Footer as _Footer } from '../../fb/footer.js';\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\n\nimport { Schema } from '../../schema.js';\nimport { MetadataVersion } from '../../enum.js';\nimport { toUint8Array } from '../../util/buffer.js';\nimport { ArrayBufferViewInput } from '../../util/buffer.js';\nimport { bigIntToNumber } from '../../util/bigint.js';\n\n/** @ignore */\nclass Footer_ {\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema()!);\n        return new OffHeapFooter(schema, footer) as Footer_;\n    }\n\n    /** @nocollapse */\n    public static encode(footer: Footer_) {\n\n        const b: Builder = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        for (const rb of [...footer.recordBatches()].slice().reverse()) {\n            FileBlock.encode(b, rb);\n        }\n        const recordBatchesOffset = b.endVector();\n\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        for (const db of [...footer.dictionaryBatches()].slice().reverse()) {\n            FileBlock.encode(b, db);\n        }\n\n        const dictionaryBatchesOffset = b.endVector();\n\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n\n        return b.asUint8Array();\n    }\n\n    declare protected _recordBatches: FileBlock[];\n    declare protected _dictionaryBatches: FileBlock[];\n    public get numRecordBatches() { return this._recordBatches.length; }\n    public get numDictionaries() { return this._dictionaryBatches.length; }\n\n    constructor(public schema: Schema,\n        public version: MetadataVersion = MetadataVersion.V4,\n        recordBatches?: FileBlock[], dictionaryBatches?: FileBlock[]) {\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n\n    public *recordBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) { yield block; }\n        }\n    }\n\n    public *dictionaryBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) { yield block; }\n        }\n    }\n\n    public getRecordBatch(index: number) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\n\nexport { Footer_ as Footer };\n\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n\n    public get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    public get numDictionaries() { return this._footer.dictionariesLength(); }\n\n    constructor(schema: Schema, protected _footer: _Footer) {\n        super(schema, _footer.version());\n    }\n\n    public getRecordBatch(index: number) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nexport class FileBlock {\n\n    /** @nocollapse */\n    public static decode(block: _Block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n\n    /** @nocollapse */\n    public static encode(b: Builder, fileBlock: FileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = BigInt(fileBlock.offset);\n        const bodyLength = BigInt(fileBlock.bodyLength);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n\n    public offset: number;\n    public bodyLength: number;\n    public metaDataLength: number;\n\n    constructor(metaDataLength: number, bodyLength: bigint | number, offset: bigint | number) {\n        this.metaDataLength = metaDataLength;\n        this.offset = bigIntToNumber(offset);\n        this.bodyLength = bigIntToNumber(bodyLength);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}