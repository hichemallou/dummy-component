{"ast":null,"code":"// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\n/**\n * Contains two child arrays, run_ends and values.\n * The run_ends child array must be a 16/32/64-bit integer array\n * which encodes the indices at which the run with the value in\n * each corresponding index in the values child array ends.\n * Like list/struct types, the value array can be of any type.\n */\nexport class RunEndEncoded {\n  constructor() {\n    this.bb = null;\n    this.bb_pos = 0;\n  }\n  __init(i, bb) {\n    this.bb_pos = i;\n    this.bb = bb;\n    return this;\n  }\n  static getRootAsRunEndEncoded(bb, obj) {\n    return (obj || new RunEndEncoded()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n  }\n  static getSizePrefixedRootAsRunEndEncoded(bb, obj) {\n    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n    return (obj || new RunEndEncoded()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n  }\n  static startRunEndEncoded(builder) {\n    builder.startObject(0);\n  }\n  static endRunEndEncoded(builder) {\n    const offset = builder.endObject();\n    return offset;\n  }\n  static createRunEndEncoded(builder) {\n    RunEndEncoded.startRunEndEncoded(builder);\n    return RunEndEncoded.endRunEndEncoded(builder);\n  }\n}","map":{"version":3,"names":["flatbuffers","RunEndEncoded","constructor","bb","bb_pos","__init","i","getRootAsRunEndEncoded","obj","readInt32","position","getSizePrefixedRootAsRunEndEncoded","setPosition","SIZE_PREFIX_LENGTH","startRunEndEncoded","builder","startObject","endRunEndEncoded","offset","endObject","createRunEndEncoded"],"sources":["/home/helektrika/Documents/dummy-component/component/frontend/node_modules/apache-arrow/src/fb/run-end-encoded.ts"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\n/**\n * Contains two child arrays, run_ends and values.\n * The run_ends child array must be a 16/32/64-bit integer array\n * which encodes the indices at which the run with the value in\n * each corresponding index in the values child array ends.\n * Like list/struct types, the value array can be of any type.\n */\nexport class RunEndEncoded {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n  __init(i:number, bb:flatbuffers.ByteBuffer):RunEndEncoded {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsRunEndEncoded(bb:flatbuffers.ByteBuffer, obj?:RunEndEncoded):RunEndEncoded {\n  return (obj || new RunEndEncoded()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsRunEndEncoded(bb:flatbuffers.ByteBuffer, obj?:RunEndEncoded):RunEndEncoded {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new RunEndEncoded()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic startRunEndEncoded(builder:flatbuffers.Builder) {\n  builder.startObject(0);\n}\n\nstatic endRunEndEncoded(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createRunEndEncoded(builder:flatbuffers.Builder):flatbuffers.Offset {\n  RunEndEncoded.startRunEndEncoded(builder);\n  return RunEndEncoded.endRunEndEncoded(builder);\n}\n}\n"],"mappings":"AAAA;AAEA,OAAO,KAAKA,WAAW,MAAM,aAAa;AAE1C;;;;;;;AAOA,OAAM,MAAOC,aAAa;EAA1BC,YAAA;IACE,KAAAC,EAAE,GAAgC,IAAI;IACtC,KAAAC,MAAM,GAAG,CAAC;EA6BZ;EA5BEC,MAAMA,CAACC,CAAQ,EAAEH,EAAyB;IAC1C,IAAI,CAACC,MAAM,GAAGE,CAAC;IACf,IAAI,CAACH,EAAE,GAAGA,EAAE;IACZ,OAAO,IAAI;EACb;EAEA,OAAOI,sBAAsBA,CAACJ,EAAyB,EAAEK,GAAkB;IACzE,OAAO,CAACA,GAAG,IAAI,IAAIP,aAAa,EAAE,EAAEI,MAAM,CAACF,EAAE,CAACM,SAAS,CAACN,EAAE,CAACO,QAAQ,EAAE,CAAC,GAAGP,EAAE,CAACO,QAAQ,EAAE,EAAEP,EAAE,CAAC;EAC7F;EAEA,OAAOQ,kCAAkCA,CAACR,EAAyB,EAAEK,GAAkB;IACrFL,EAAE,CAACS,WAAW,CAACT,EAAE,CAACO,QAAQ,EAAE,GAAGV,WAAW,CAACa,kBAAkB,CAAC;IAC9D,OAAO,CAACL,GAAG,IAAI,IAAIP,aAAa,EAAE,EAAEI,MAAM,CAACF,EAAE,CAACM,SAAS,CAACN,EAAE,CAACO,QAAQ,EAAE,CAAC,GAAGP,EAAE,CAACO,QAAQ,EAAE,EAAEP,EAAE,CAAC;EAC7F;EAEA,OAAOW,kBAAkBA,CAACC,OAA2B;IACnDA,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC;EACxB;EAEA,OAAOC,gBAAgBA,CAACF,OAA2B;IACjD,MAAMG,MAAM,GAAGH,OAAO,CAACI,SAAS,EAAE;IAClC,OAAOD,MAAM;EACf;EAEA,OAAOE,mBAAmBA,CAACL,OAA2B;IACpDd,aAAa,CAACa,kBAAkB,CAACC,OAAO,CAAC;IACzC,OAAOd,aAAa,CAACgB,gBAAgB,CAACF,OAAO,CAAC;EAChD"},"metadata":{},"sourceType":"module","externalDependencies":[]}